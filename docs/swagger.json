{
  "openapi": "3.0.0",
  "info": {
    "title": "PGATS API - Controle financeiro - Trabalho Final",
    "version": "1.0.0",
    "description": "Uma solução para organizar e acompanhar movimentações financeiras de forma simples e segura.",
    "contact": {
      "name": "Natalia Ferreira Ventura",
      "url": "https://github.com/NataliaFerreiraVentura"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Servidor de desenvolvimento"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT obtido após login bem-sucedido"
      }
    },
    "schemas": {
      "RegistroRequest": {
        "type": "object",
        "required": ["tipo", "valor", "descricao"],
        "properties": {
          "tipo": {
            "type": "string",
            "enum": ["entrada", "saida"],
            "description": "Tipo do registro financeiro",
            "example": "entrada"
          },
          "valor": {
            "type": "number",
            "minimum": 0.01,
            "description": "Valor da transação (deve ser positivo)",
            "example": 1250.75
          },
          "descricao": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Descrição da transação",
            "example": "Salário do mês de setembro"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3,
            "description": "Nome de usuário",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Senha do usuário",
            "example": "admin123"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "type": "object",
            "description": "Dados da resposta (varia por endpoint)"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Mensagem de erro personalizada",
            "example": "Erro específico da operação"
          }
        }
      }
    }
  },
  "paths": {
    "/api/register": {
      "post": {
        "summary": "Registrar novo usuário",
        "description": "Cria uma nova conta de usuário. Não retorna token de autenticação.",
        "tags": ["Autenticação"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Usuário criado com sucesso"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Username e senha são obrigatórios",
                            "Username deve ter pelo menos 3 caracteres", 
                            "Senha deve ter pelo menos 6 caracteres"
                          ],
                          "example": "Username deve ter pelo menos 3 caracteres"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Usuário já existe",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Usuário já existe com este username"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login do usuário",
        "description": "Autentica um usuário existente e retorna token JWT. Usuários pré-criados: admin/admin123 e testuser/test123",
        "tags": ["Autenticação"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Login realizado com sucesso"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Username e senha são obrigatórios"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Usuário não encontrado",
                            "Senha incorreta"
                          ],
                          "example": "Usuário não encontrado"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/registros": {
      "get": {
        "summary": "Listar todos os registros",
        "description": "Retorna todos os registros financeiros (entradas e saídas) do usuário autenticado",
        "tags": ["Registros"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Registros obtidos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Criar novo registro financeiro",
        "description": "Cria uma nova entrada (receita) ou saída (despesa) financeira",
        "tags": ["Registros"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistroRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registro criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/registros/{id}": {
      "get": {
        "summary": "Obter registro por ID",
        "description": "Retorna um registro específico pelo ID fornecido",
        "tags": ["Registros"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "ID único do registro",
            "example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Registro obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos (ID inválido)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Registro não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualizar registro",
        "description": "Atualiza um registro financeiro existente",
        "tags": ["Registros"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "ID único do registro",
            "example": 5
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistroRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registro atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Registro não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletar registro",
        "description": "Remove um registro financeiro existente do sistema",
        "tags": ["Registros"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "ID único do registro",
            "example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Registro deletado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos (ID inválido)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Registro não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Autenticação",
      "description": "Endpoints para registro e login de usuários com mensagens de erro personalizadas"
    },
    {
      "name": "Registros",
      "description": "Endpoints para gerenciar registros financeiros unificados (entradas e saídas)"
    }
  ]
}